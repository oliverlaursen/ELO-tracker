{"ast":null,"code":"const mongoose = require('mongoose');\nconst matchSchema = new mongoose.Schema({\n  player1: {\n    type: String,\n    required: true\n  },\n  player2: {\n    type: String,\n    required: true\n  },\n  player1Goals: {\n    type: Number,\n    required: true\n  },\n  player2Goals: {\n    type: Number,\n    required: true\n  },\n  timestamp: {\n    type: Date,\n    required: true\n  }\n});\nconst Match = mongoose.model('Match', matchSchema);\nmodule.exports = Match;\n\n// Set up default mongoose connection\nconst mongoDB = 'mongodb://localhost:27017/myapp';\nmongoose.connect(mongoDB, {\n  useNewUrlParser: true,\n  useUnifiedTopology: true\n});\n\n// Get the default connection\nconst db = mongoose.connection;\n\n// Bind connection to error event (to get notification of connection errors)\ndb.on('error', console.error.bind(console, 'MongoDB connection error:'));\nmodule.exports = db;","map":{"version":3,"names":["mongoose","require","matchSchema","Schema","player1","type","String","required","player2","player1Goals","Number","player2Goals","timestamp","Date","Match","model","module","exports","mongoDB","connect","useNewUrlParser","useUnifiedTopology","db","connection","on","console","error","bind"],"sources":["/Users/oliverlundorff/dev/ELO-tracker/src/db.js"],"sourcesContent":["const mongoose = require('mongoose');\n\n\nconst matchSchema = new mongoose.Schema({\n    player1: { type: String, required: true },\n    player2: { type: String, required: true },\n    player1Goals: { type: Number, required: true },\n    player2Goals: { type: Number, required: true },\n    timestamp: { type: Date, required: true }\n  });\n  \nconst Match = mongoose.model('Match', matchSchema);\n  \nmodule.exports = Match;\n\n// Set up default mongoose connection\nconst mongoDB = 'mongodb://localhost:27017/myapp';\nmongoose.connect(mongoDB, { useNewUrlParser: true, useUnifiedTopology: true });\n\n// Get the default connection\nconst db = mongoose.connection;\n\n// Bind connection to error event (to get notification of connection errors)\ndb.on('error', console.error.bind(console, 'MongoDB connection error:'));\n\nmodule.exports = db;\n"],"mappings":"AAAA,MAAMA,QAAQ,GAAGC,OAAO,CAAC,UAAU,CAAC;AAGpC,MAAMC,WAAW,GAAG,IAAIF,QAAQ,CAACG,MAAM,CAAC;EACpCC,OAAO,EAAE;IAAEC,IAAI,EAAEC,MAAM;IAAEC,QAAQ,EAAE;EAAK,CAAC;EACzCC,OAAO,EAAE;IAAEH,IAAI,EAAEC,MAAM;IAAEC,QAAQ,EAAE;EAAK,CAAC;EACzCE,YAAY,EAAE;IAAEJ,IAAI,EAAEK,MAAM;IAAEH,QAAQ,EAAE;EAAK,CAAC;EAC9CI,YAAY,EAAE;IAAEN,IAAI,EAAEK,MAAM;IAAEH,QAAQ,EAAE;EAAK,CAAC;EAC9CK,SAAS,EAAE;IAAEP,IAAI,EAAEQ,IAAI;IAAEN,QAAQ,EAAE;EAAK;AAC1C,CAAC,CAAC;AAEJ,MAAMO,KAAK,GAAGd,QAAQ,CAACe,KAAK,CAAC,OAAO,EAAEb,WAAW,CAAC;AAElDc,MAAM,CAACC,OAAO,GAAGH,KAAK;;AAEtB;AACA,MAAMI,OAAO,GAAG,iCAAiC;AACjDlB,QAAQ,CAACmB,OAAO,CAACD,OAAO,EAAE;EAAEE,eAAe,EAAE,IAAI;EAAEC,kBAAkB,EAAE;AAAK,CAAC,CAAC;;AAE9E;AACA,MAAMC,EAAE,GAAGtB,QAAQ,CAACuB,UAAU;;AAE9B;AACAD,EAAE,CAACE,EAAE,CAAC,OAAO,EAAEC,OAAO,CAACC,KAAK,CAACC,IAAI,CAACF,OAAO,EAAE,2BAA2B,CAAC,CAAC;AAExET,MAAM,CAACC,OAAO,GAAGK,EAAE"},"metadata":{},"sourceType":"module","externalDependencies":[]}